// RUN: %target-sil-opt -diagnostics -enable-sil-opaque-values -emit-sorted-sil %s | %FileCheck %s

import Builtin

sil_stage raw

// Test lowerAssignment, createLoad, checkLoadInst, checkStoreInst.
// ---
// CHECK-LABEL: sil hidden @assign_inout : $@convention(thin) <T> (@inout T, @in T) -> () {
// CHECK: bb0(%0 : $*T, %1 : $T):
// CHECK: %[[CPY:.*]] = copy_value %1 : $T
// CHECK: %[[LD:.*]] = load %0 : $*T
// CHECK: store %1 to %0 : $*T
// CHECK: destroy_value %[[LD]] : $T
// CHECK: destroy_value %1 : $T
// CHECK: return %{{.*}} : $()
// CHECK-LABEL: } // end sil function 'assign_inout'
sil hidden @assign_inout : $@convention(thin) <T> (@inout T, @in T) -> () {
bb0(%0 : $*T, %1 : $T):
  %2 = copy_value %1 : $T
  assign %2 to %0 : $*T
  destroy_value %1 : $T
  %5 = tuple ()
  return %5 : $()
}

// Test trivial, guaranteed copyforwarding.
// ----
// CHECK-LABEL: sil hidden @diagnose_identity : $@convention(thin) <T> (@in T) -> @out T {
// CHECK: bb0(%0 : $T):
// CHECK: return %0 : $T
// CHECK-LABEL: } // end sil function 'diagnose_identity'
sil hidden @diagnose_identity : $@convention(thin) <T> (@in T) -> @out T {
bb0(%0 : $T):
  %c = copy_value %0 : $T
  destroy_value %0 : $T
  return %c : $T
}
